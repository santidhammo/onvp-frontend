#  ONVP Backend - Backend API provider for the ONVP website
#
# Copyright (c) 2025.  Sjoerd van Leent
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    access_log  /dev/stdout  main;
    error_log   /dev/stderr  debug;

    # Currently, the following languages are supported:
    #
    # nl (Dutch/Nederlands)
    # en-US (US English)

    location /en-US {
      root   /usr/share/nginx/html;
      index  /en-US/index.html;
      try_files $uri $uri/ /en-US/index.html;
    }

    location /nl {
      root   /usr/share/nginx/html;
      index  /nl/index.html;
      try_files $uri $uri/ /nl/index.html;
    }

    # Redirect to the appropriate language, if no language header is found, redirect to US English as a fallback
    location / {
      set $first_language $http_accept_language;
      if ($http_accept_language ~* '^(.+?),') {
        set $first_language $1;
      }

      set $language_suffix 'en-US';
      if ($first_language ~* 'nl') {
        set $language_suffix 'nl';
      }

      return 301 $scheme://$http_host/$language_suffix$uri;
    }

    # Configuration of the error page for as far as available
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # Pass the /docs endpoint to the documentation endpoint of the backend
    location /docs {
      proxy_pass ${REVERSE_PROXY_URL};
    }

    # Pass the /api endpoint to the api endpoint of the backend
    location /api {
      proxy_pass ${REVERSE_PROXY_URL};
    }

}
